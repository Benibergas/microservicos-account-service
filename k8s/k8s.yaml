#--------------------------------------------------------
# 1) Secret que contém host/user/password do Postgres (e também a chave JWT)
#--------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: account-secret
  namespace: default
type: Opaque
data:
  # “postgres” em base64 = “cG9zdGdyZXM=”
  postgres-host: cG9zdGdyZXM=
  postgres-db:    c3RvcmU=            # base64("store")
  postgres-user:  c3RvcmU=            # base64("store")
  postgres-password: NWVDcjN0         # base64("5eCr3t")
  jwt-secret-key: eXJCQmdZbHZKUWVzbHpGbGdYOU1GWmNjVG9JMmZqUkZxdWFscXVlcmNvaXNh

---
#--------------------------------------------------------
# 2) Deployment do PostgreSQL
#--------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              value: store
            - name: POSTGRES_USER
              value: store
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-secret
                  key: postgres-password
          ports:
            - containerPort: 5432
          # (opcional) monte um PVC se precisar de persistência:
          # volumeMounts:
          #   - name: postgres-data
          #     mountPath: /var/lib/postgresql/data
      # volumes:
      #   - name: postgres-data
      #     persistentVolumeClaim:
      #       claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
#--------------------------------------------------------
# 3) Deployment do account-service
#--------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
  namespace: default
  labels:
    app: account
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account
  template:
    metadata:
      labels:
        app: account
    spec:
      containers:
        - name: account
          # Substitua pela sua imagem real do Docker (por exemplo, se usar DockerHub):
          #   image: meu-usuario-docker/account-service:latest
          image: microservicos-account-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: account-secret
                  key: postgres-host
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: account-secret
                  key: postgres-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-secret
                  key: postgres-password
            - name: SPRING_PROFILES_ACTIVE
              value: production

---
kind: Service
apiVersion: v1
metadata:
  name: account
  namespace: default
  labels:
    app: account
spec:
  selector:
    app: account
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
